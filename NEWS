0.7
 * Added a Date field fld.
 * Added patch from "Eric E. Coe" <ecoe@reportweb.com> that makes 
   CGIListView work even when your id column is not named id.
 * Added a new typed called Tree for easy creation of tree structure 
   datatypes.
 * Anders Westrup <anders@barbanet.com> added a Table::count method 
   to count the number of hits.
 * From a patch by Konrad Riedel <k.riedel@gmx.de> the folowing features 
   was derived:
     + input_type param added to N2One that specifying what kind of
       html objects should be used for editing it. Possible values are
       "radio" (default) and "select".
     + Split up the result shown in a CGIListView i multiple pages
     + Click on a columname to sort the CGIListView by the column
     + CGIGermanListView a translated version of CGIListView with a new 
       layout.
     (The editable id's are not included by default as they break a few
      things, see editable_id.README.)
 * Quite som spelling and gramma correction from above patches and from 
   Bryon Bean <bbean@timebridge.com>.
 * Reformated all code to use 8 space tabs and 2 space indention as 
   sugested by "Eric E. Coe" <ecoe@reportweb.com>.
 * Anders Westrup <anders@barbanet.com> added a _done param to View.cgi
   that makes it send a Location: redirect to that url after preforming
   the update or delete action instread of bringing up an editor. There 
   is also a _done2 param forcing CGIQueryEdit to set the _done param to
   this value (eg makes the browser jump to this address after the 
   edit/add is done).

0.6.1
 * Fixed bug preventing adding, and updating posts with no other fields
   than the id field.
 * Fixed bug that got fields from diffrent tabels with the same name 
   mixed up when selecting related data. There still might be a
   problem when not selecting all fields of a post, then the not
   selected fields may show up as the fields with the same name from 
   the other tabels that where selected.
 * Rewrote Test2.fmt to work with the new Formated2.cgi
 * Fixed bug in Formated2.cgi preventing the FLD param from working
 * Added Table::noid_list method

0.6
 * Added N2One relations
 * An Int value set to "" will now be set to NULL in the db
 * Added view_fmt method to PostSet, Post and Fld classes. It will output
   the object acording to a fmt string that in a HTML like way allows you to
   format your Posts or PostSets in any way you like.

0.5
 * View.cgi now optionally asks for username and passwords which are passed 
   on to the database server. With the mySQL access system this allows you
   to apply access restrictions on Database, Table or Field basis.
 * Added a rows method to PostSet reporting the number of rows matched.
 * Made quite some additional parameters customizable by the $data hash in 
   the Fld constructor including display and store values for Bool, the sql
   sizes and types of all flds, the sizes of <input ...> boxes.
 * Splited the DB object into msqlDB and mysqlDB (the HTMLView::DB method 
   points to msqlDB for backwards compatibility).
 * Applied some chnages by Richard Braakman <dark@xs4all.nl> that:
   - Fixed up the docs with quite some spell corrections
   - Made sure that the field data is propperly escaped both in the html 
     forms and the sql requests.
   - Added a Bool Fld
   - Added a mysqlDB class for using mySQL database engines.

0.4 
  The interface has been rearrange into a more natural structure, based
  on DB, Table, Post, Field ... objects instead of just a bunch of
  commonly used procedures. The idea is to be able to handle relations
  and fields in the same way whenever possible and to make it easy to
  add custom Field, Database or Relation objects handling different
  kinds of fields or relation or even database handling routines.

	All the features of the old HTMLView code is still there, plus quite 
  a few new ones (see the docs). As for the previous TODO list what
  I've got into this new stuff is just the following things:

  * Move all Post handling to to HTMLView::Post and use it.

      As I said all methods are now split up into this kind of objects

  * Autodetect the part of $flds that's in $where in HTMLView::ViewList

      Actually the selection code is much more advanced now, you just
      specify the where clause (which might even contains field names
      like 'group->name' to match the name field in a related table
      through the relation group)

  * List methods that might have to be changed if using a different DBD

      Actually they're all placed in a separate DB class which can be
      subclassed and the methods needing changing can be overloaded.

0.3
  * Added HTMLView::ViewData method for simplifying wrting customized 
    viewing scripts.
  * Added example script Formated.cgi for viewing posts in a formated 
    way.
  * Added HTMLView::ViewList method that allows you to simply make complex
    relation based searchings and then disply the result.
0.2
  * Wrote a QuickStart tutorial taking you through the first steps of 
    setting up an database interface.
  * Made sure all the SYNOPSIS code and the View.cgi script runs as they 
    are (that is they contain working example databse names).
  * Corrected some old out of date statements in the docs as reported by 
    Ronald Emaus <Ronald.Emaus@wl.com>.
  * Cleand up the docs
        * Some code cleanup and bugfixes
0.1
  * First public release.
